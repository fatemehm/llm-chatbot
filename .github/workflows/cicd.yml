name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for SonarQube

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install pytest-cov
      - name: Run pre-commit
        run: pre-commit run --all-files
      - name: Run tests
        run: |
         flake8 .
         black --check .
         pytest --cov=app --cov-report=xml

      - name: Run Pytest with coverage
        run: |
          pip install pytest-cov
          pytest --cov=app --cov-report=xml --cov-report=term

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Set up DVC
        run: |
          pip install dvc
          dvc pull

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

      - name: Build and push FastAPI image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --file ./Dockerfile \
            --tag fatemehmsy179/llm-chatbot:latest \
            --tag fatemehmsy179/llm-chatbot:${GITHUB_SHA::7} \
            --push \
            .

      - name: Build and push Streamlit image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --file ./Dockerfile.streamlit \
            --tag fatemehmsy179/llm-chatbot-streamlit:latest \
            --tag fatemehmsy179/llm-chatbot-streamlit:${GITHUB_SHA::7} \
            --push \
            .
