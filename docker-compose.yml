version: '3.8'

services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    image: llm-chatbot:latest
    container_name: llm-chatbot-fastapi
    ports:
      - "8000:8000"
    environment:
      - MODEL_NAME=google/flan-t5-small
      - PYTHONUNBUFFERED=1
    volumes:
      - ./models:/app/models:ro
      - ./data:/app/data:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - chatbot-network
    restart: unless-stopped

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    image: llm-chatbot-streamlit:latest
    container_name: llm-chatbot-streamlit
    ports:
      - "8501:8501"
    environment:
      - API_URL=http://fastapi:8000
      - PYTHONUNBUFFERED=1
    depends_on:
      - fastapi
    networks:
      - chatbot-network
    restart: unless-stopped

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.9.2
    container_name: llm-chatbot-mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=file:///mlflow/mlruns
      - MLFLOW_ARTIFACT_ROOT=/mlflow/mlartifacts
    volumes:
      - ./mlruns:/mlflow/mlruns
      - ./mlartifacts:/mlflow/mlartifacts
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri file:///mlflow/mlruns --default-artifact-root /mlflow/mlartifacts
    networks:
      - chatbot-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: llm-chatbot-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - chatbot-network
    restart: unless-stopped

networks:
  chatbot-network:
    driver: bridge

volumes:
  prometheus-data:
